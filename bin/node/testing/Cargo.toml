[package]
name = "node-testing"
version = "3.0.0-dev"
authors = ["Parity Technologies <admin@parity.io>"]
description = "Test utilities for Substrate node."
edition = "2021"
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"
homepage = "https://substrate.io"
repository = "https://github.com/paritytech/substrate/"
publish = false

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
codec = { package = "parity-scale-codec", version = "3.0.0" }
fs_extra = "1"
futures = "0.3.21"
log = "0.4.17"
tempfile = "3.1.0"
frame-system = { version = "4.0.0-dev", path = "../../../frame/system" }
node-executor = { version = "3.0.0-dev", path = "../executor" }
node-primitives = { version = "2.0.0", path = "../primitives" }
node-peer-runtime = { version = "3.0.0-dev", path = "../runtime" }
pallet-assets = { version = "4.0.0-dev", path = "../../../frame/assets" }
pallet-asset-tx-payment = { version = "4.0.0-dev", path = "../../../frame/transaction-payment/asset-tx-payment" }
pallet-transaction-payment = { version = "4.0.0-dev", path = "../../../frame/transaction-payment" }
sc-block-builder = { version = "0.10.0-dev", path = "../../../client/block-builder" }
sc-client-api = { version = "4.0.0-dev", path = "../../../client/api" }
sc-client-db = { version = "0.10.0-dev", features = ["rocksdb"], path = "../../../client/db" }
sc-consensus = { version = "0.10.0-dev", path = "../../../client/consensus/common" }
sc-executor = { version = "0.10.0-dev", path = "../../../client/executor" }
sc-service = { version = "0.10.0-dev", features = [
	"test-helpers",
	"rocksdb",
], path = "../../../client/service" }
sp-api = { version = "4.0.0-dev", path = "../../../primitives/api" }
sp-block-builder = { version = "4.0.0-dev", path = "../../../primitives/block-builder" }
sp-blockchain = { version = "4.0.0-dev", path = "../../../primitives/blockchain" }
sp-consensus = { version = "0.10.0-dev", path = "../../../primitives/consensus/common" }
sp-core = { version = "7.0.0", path = "../../../primitives/core" }
sp-inherents = { version = "4.0.0-dev", path = "../../../primitives/inherents" }
sp-io = { version = "7.0.0", path = "../../../primitives/io" }
sp-keyring = { version = "7.0.0", path = "../../../primitives/keyring" }
sp-runtime = { version = "7.0.0", path = "../../../primitives/runtime" }
sp-timestamp = { version = "4.0.0-dev", default-features = false, path = "../../../primitives/timestamp" }
substrate-test-client = { version = "2.0.0", path = "../../../test-utils/client" }






# Frontier

# Frontier
fc-cli = { path = "../../../evm-client/cli" }
fc-consensus = { path = "../../../evm-client/consensus" }
fc-db = { path = "../../../evm-client/db" }
fc-mapping-sync = { path = "../../../evm-client/mapping-sync" }
fc-rpc = { path = "../../../evm-client/rpc" }
fc-rpc-core = { path = "../../../evm-client/rpc-core" }
fp-consensus = { path = "../../../evm-primitives/consensus" }
fp-dynamic-fee = { path = "../../../evm-primitives/dynamic-fee" }
fp-evm = { path = "../../../evm-primitives/evm" }
fp-rpc = { path = "../../../evm-primitives/rpc" }
fp-storage = { path = "../../../evm-primitives/storage" }
fp-self-contained = {version="1.0.0-dev", path = "../../../evm-primitives/self-contained", default-features = false }