[package]
name = "node-cli"
version = "3.0.0-dev"
authors = ["Peer Technologies"]
build = "build.rs"
description = "Generic Substrate node implementation in Rust."
edition = "2021"
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"
default-run = "peer"
homepage = "https://substrate.io"
repository = "https://github.com/paritytech/substrate/"
publish = false

[package.metadata.wasm-pack.profile.release]
# `wasm-opt` has some problems on linux, see
# https://github.com/rustwasm/wasm-pack/issues/781 etc.
wasm-opt = false

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[badges]
travis-ci = { repository = "paritytech/substrate" }
maintenance = { status = "actively-developed" }
is-it-maintained-issue-resolution = { repository = "paritytech/substrate" }
is-it-maintained-open-issues = { repository = "paritytech/substrate" }

[[bin]]
name = "peer"
path = "bin/main.rs"
required-features = ["cli"]

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
# third-party dependencies
array-bytes = "4.1"
clap = { version = "4.0.9", features = ["derive"], optional = true }
codec = { package = "parity-scale-codec", version = "3.0.0" }
serde = { version = "1.0.136", features = ["derive"] }
jsonrpsee = { version = "0.16.2", features = ["server"] }
futures = "0.3.21"
hex-literal = "0.3.4"
log = "0.4.17"
rand = "0.8"

# primitives
sp-authority-discovery = { version = "4.0.0-dev", path = "../../../primitives/authority-discovery" }
sp-consensus-babe = { version = "0.10.0-dev", path = "../../../primitives/consensus/babe" }
grandpa-primitives = { version = "4.0.0-dev", package = "sp-finality-grandpa", path = "../../../primitives/finality-grandpa" }
sp-api = { version = "4.0.0-dev", path = "../../../primitives/api" }
sp-core = { version = "7.0.0", path = "../../../primitives/core" }
sp-runtime = { version = "7.0.0", path = "../../../primitives/runtime" }
sp-timestamp = { version = "4.0.0-dev", path = "../../../primitives/timestamp" }
sp-authorship = { version = "4.0.0-dev", path = "../../../primitives/authorship" }
sp-inherents = { version = "4.0.0-dev", path = "../../../primitives/inherents" }
sp-keyring = { version = "7.0.0", path = "../../../primitives/keyring" }
sp-keystore = { version = "0.13.0", path = "../../../primitives/keystore" }
sp-consensus = { version = "0.10.0-dev", path = "../../../primitives/consensus/common" }
sp-transaction-pool = { version = "4.0.0-dev", path = "../../../primitives/transaction-pool" }
sp-transaction-storage-proof = { version = "4.0.0-dev", path = "../../../primitives/transaction-storage-proof" }
sp-io = { path = "../../../primitives/io" }

# Frontier
fc-cli = { path = "../../../evm-client/cli" }
fc-consensus = { path = "../../../evm-client/consensus" }
fc-db = { path = "../../../evm-client/db" }
fc-mapping-sync = { path = "../../../evm-client/mapping-sync" }
fc-rpc = { path = "../../../evm-client/rpc" }
fc-rpc-core = { path = "../../../evm-client/rpc-core" }
fp-consensus = { path = "../../../evm-primitives/consensus" }
fp-dynamic-fee = { path = "../../../evm-primitives/dynamic-fee" }
fp-evm = { path = "../../../evm-primitives/evm" }
fp-rpc = { path = "../../../evm-primitives/rpc" }
fp-storage = { path = "../../../evm-primitives/storage" }


# client dependencies
sc-client-api = { version = "4.0.0-dev", path = "../../../client/api" }
sc-chain-spec = { version = "4.0.0-dev", path = "../../../client/chain-spec" }
sc-consensus = { version = "0.10.0-dev", path = "../../../client/consensus/common" }
sc-transaction-pool = { version = "4.0.0-dev", path = "../../../client/transaction-pool" }
sc-transaction-pool-api = { version = "4.0.0-dev", path = "../../../client/transaction-pool/api" }
sc-network = { version = "0.10.0-dev", path = "../../../client/network" }
sc-network-common = { version = "0.10.0-dev", path = "../../../client/network/common" }
sc-consensus-slots = { version = "0.10.0-dev", path = "../../../client/consensus/slots" }
sc-consensus-babe = { version = "0.10.0-dev", path = "../../../client/consensus/babe" }
sc-consensus-uncles = { version = "0.10.0-dev", path = "../../../client/consensus/uncles" }
grandpa = { version = "0.10.0-dev", package = "sc-finality-grandpa", path = "../../../client/finality-grandpa" }
sc-rpc = { version = "4.0.0-dev", path = "../../../client/rpc" }
sc-basic-authorship = { version = "0.10.0-dev", path = "../../../client/basic-authorship" }
sc-service = { version = "0.10.0-dev", default-features = false, path = "../../../client/service" }
sc-telemetry = { version = "4.0.0-dev", path = "../../../client/telemetry" }
sc-executor = { version = "0.10.0-dev", path = "../../../client/executor" }
sc-authority-discovery = { version = "0.10.0-dev", path = "../../../client/authority-discovery" }
sc-sync-state-rpc = { version = "0.10.0-dev", path = "../../../client/sync-state-rpc" }
sc-sysinfo = { version = "6.0.0-dev", path = "../../../client/sysinfo" }



sc-consensus-epochs = { version = "0.10.0-dev", path = "../../../client/consensus/epochs" }
sc-rpc-api = { version = "0.10.0-dev", path = "../../../client/rpc-api" }

# sc-finality-grandpa = { version = "0.10.0-dev", path = "../../../client/finality-grandpa" }
sc-finality-grandpa-rpc = { version = "0.10.0-dev", path = "../../../client/finality-grandpa/rpc" }
sp-block-builder = { version = "4.0.0-dev", path = "../../../primitives/block-builder" }
sp-blockchain = { version = "4.0.0-dev", path = "../../../primitives/blockchain" }
#pallet-contracts-rpc = { version = "4.0.0-dev", path = "../../../frame/contracts/rpc/" }
# pallet-mmr-rpc = { version = "3.0.0", path = "../../../frame/merkle-mountain-range/rpc/" }
pallet-transaction-payment-rpc = { version = "4.0.0-dev", path = "../../../frame/transaction-payment/rpc/" }
sc-consensus-babe-rpc = { version = "0.10.0-dev", path = "../../../client/consensus/babe/rpc" }
substrate-frame-rpc-system = { version = "4.0.0-dev", path = "../../../utils/frame/rpc/system" }
substrate-state-trie-migration-rpc = { version = "4.0.0-dev", path = "../../../utils/frame/rpc/state-trie-migration-rpc/" }


# frame dependencies
frame-system = { version = "4.0.0-dev", path = "../../../frame/system" }
frame-system-rpc-runtime-api = { version = "4.0.0-dev", path = "../../../frame/system/rpc/runtime-api" }
pallet-transaction-payment = { version = "4.0.0-dev", path = "../../../frame/transaction-payment" }
pallet-assets = { version = "4.0.0-dev", path = "../../../frame/assets/" }
pallet-asset-tx-payment = { version = "4.0.0-dev", path = "../../../frame/transaction-payment/asset-tx-payment/" }
pallet-im-online = { version = "4.0.0-dev", default-features = false, path = "../../../frame/im-online" }
frame-benchmarking = { version = "4.0.0-dev", default-features = false, optional = true, path = "../../../frame/benchmarking" }

# node-specific dependencies
node-peer-runtime = { version = "3.0.0-dev", path = "../runtime" }
# node-rpc = { version = "3.0.0-dev", path = "../rpc" }
node-primitives = { version = "2.0.0", path = "../primitives" }
node-executor = { version = "3.0.0-dev", path = "../executor" }

# CLI-specific dependencies
sc-cli = { version = "0.10.0-dev", optional = true, path = "../../../client/cli" }
frame-benchmarking-cli = { version = "4.0.0-dev", optional = true, path = "../../../utils/frame/benchmarking-cli" }
node-inspect = { version = "0.9.0-dev", optional = true, path = "../inspect" }
try-runtime-cli = { version = "0.10.0-dev", optional = true, path = "../../../utils/frame/try-runtime/cli" }
serde_json = "1.0.85"


# [target.'cfg(any(target_arch="x86_64", target_arch="aarch64"))'.dependencies]
#node-executor = { version = "3.0.0-dev", path = "../executor", features = ["wasmtime"] }
#sc-cli = { version = "0.10.0-dev", optional = true, path = "../../../client/cli", features = ["wasmtime"] }
#sc-service = { version = "0.10.0-dev", default-features = false, path = "../../../client/service", features = ["wasmtime",] }
#sp-trie = { version = "7.0.0", default-features = false, path = "../../../primitives/trie", features = ["memory-tracker",] }

[dev-dependencies]
sc-keystore = { version = "4.0.0-dev", path = "../../../client/keystore" }
sc-client-db = { version = "0.10.0-dev", path = "../../../client/db" }
sc-consensus = { version = "0.10.0-dev", path = "../../../client/consensus/common" }
sc-consensus-babe = { version = "0.10.0-dev", path = "../../../client/consensus/babe" }
sc-consensus-epochs = { version = "0.10.0-dev", path = "../../../client/consensus/epochs" }
sc-service-test = { version = "2.0.0", path = "../../../client/service/test" }
sc-block-builder = { version = "0.10.0-dev", path = "../../../client/block-builder" }
sp-tracing = { version = "6.0.0", path = "../../../primitives/tracing" }
#sp-blockchain = { version = "4.0.0-dev", path = "../../../primitives/blockchain" }
futures = "0.3.21"
tempfile = "3.1.0"
assert_cmd = "2.0.2"
nix = "0.23"
serde_json = "1.0"
regex = "1.6.0"
platforms = "2.0"
async-std = { version = "1.11.0", features = ["attributes"] }
soketto = "0.7.1"
criterion = { version = "0.3.5", features = ["async_tokio"] }
tokio = { version = "1.22.0", features = ["macros", "time", "parking_lot"] }
tokio-util = { version = "0.7.4", features = ["compat"] }
wait-timeout = "0.2"
#remote-externalities = { path = "../../../utils/frame/remote-externalities" }
substrate-rpc-client = { path = "../../../utils/frame/rpc/client" }
pallet-timestamp = { version = "4.0.0-dev", path = "../../../frame/timestamp" }

[build-dependencies]
clap = { version = "4.0.9", optional = true }
clap_complete = { version = "4.0.2", optional = true }
node-inspect = { version = "0.9.0-dev", optional = true, path = "../inspect" }
frame-benchmarking-cli = { version = "4.0.0-dev", optional = true, path = "../../../utils/frame/benchmarking-cli" }
substrate-build-script-utils = { version = "3.0.0", optional = true, path = "../../../utils/build-script-utils" }
substrate-frame-cli = { version = "4.0.0-dev", optional = true, path = "../../../utils/frame/frame-utilities-cli" }
try-runtime-cli = { version = "0.10.0-dev", optional = true, path = "../../../utils/frame/try-runtime/cli" }
sc-cli = { version = "0.10.0-dev", path = "../../../client/cli", optional = true }
pallet-balances = { version = "4.0.0-dev", path = "../../../frame/balances" }

[features]
default = ["cli"]
cli = [
	# "node-executor/wasmi-errno",
	"node-inspect",
	"sc-cli",
	"frame-benchmarking-cli",
	"substrate-frame-cli",
	"sc-service/rocksdb",
	"clap",
	"clap_complete",
	"substrate-build-script-utils",
	"try-runtime-cli",
	"frame-benchmarking/std",
]
runtime-benchmarks = [
	"node-peer-runtime/runtime-benchmarks",
	"frame-benchmarking-cli/runtime-benchmarks",
	"frame-benchmarking/runtime-benchmarks"
]
# Enable features that allow the runtime to be tried and debugged. Name might be subject to change
# in the near future.
#rpc_binary_search_estimate = ["fc-rpc/rpc_binary_search_estimate"]
try-runtime = ["node-peer-runtime/try-runtime", "try-runtime-cli/try-runtime"]

[[bench]]
name = "transaction_pool"
harness = false

[[bench]]
name = "block_production"
harness = false
